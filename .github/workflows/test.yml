name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout with token
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v3.5.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout without token
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3.5.2

      - name: Fetch Go version
        run: |
          GO_VERSION=$(perl -ne 'print "$1\n" if /FROM golang:([0-9.]+)/' Dockerfile | head -n1)
          [ -n "$GO_VERSION" ] || exit 1
          echo "go_version=$GO_VERSION" >> $GITHUB_ENV

      - name: Setup Go environment
        uses: actions/setup-go@v4.0.1
        with:
          go-version: "${{ env.go_version }}"

      - name: Program Test 1
        run: go test ./...

      - name: Program Test 2
        run: go test -bench=. -benchmem ./...

      - name: Version
        if: github.event_name != 'pull_request'
        uses: cycjimmy/semantic-release-action@v3.4.2
        with:
          semantic_version: 17.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
